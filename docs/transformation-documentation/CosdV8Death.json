{
  "omopTable": "Death",
  "origin": "COSD",
  "omopColumns": [
    {
      "name": "NhsNumber",
      "operation_description": "Value copied from `NhsNumber`",
      "dataSource": [
        {
          "name": "NhsNumber",
          "description": "Patient NHS Number",
          "origins": [
            {
              "origin": "NHS NUMBER",
              "url": null
            }
          ]
        }
      ],
      "query": "\n;with XMLNAMESPACES('http://www.datadictionary.nhs.uk/messages/COSD-v8-1' AS COSD),\n\tCosdRecords as ( \n\tselect\n\t\tT.staging.value('(Id/@root)[1]', 'uniqueidentifier') as Id,\n\t\tT.staging.query('*[local-name() != \"Id\"][1]/*[1]') as Node -- Select the first inner element of the element that is not called Id.\n\tfrom omop_staging.cosd_staging\n\tcross apply content.nodes('COSD:COSD/*') as T(staging)\n\twhere T.staging.exist('Id/@root') = 1\n\t\tand Content.value('namespace-uri((/*:COSD)[1])','nvarchar(max)') = 'http://www.datadictionary.nhs.uk/messages/COSD-v8-1'\n\t\t--and substring (FileName, 15, 2) = 'CO'\n)\nselect \n\tdistinct\n\t\tNode.value('(//NHSNumber/@extension)[1]', 'varchar(max)') as NhsNumber,\n\t\tNode.value('(//PersonDeathDate)[1]', 'varchar(max)') as DeathDate\nfrom CosdRecords\nwhere Node.value('(//PersonDeathDate)[1]', 'varchar(max)') is not null;\n\t",
      "lookup_table_markdown": null
    },
    {
      "name": "death_date",
      "operation_description": "Converts text to dates.",
      "dataSource": [
        {
          "name": "DeathDate",
          "description": "The date on which a PERSON died or is officially deemed to have died.",
          "origins": [
            {
              "origin": "PERSON DEATH DATE",
              "url": null
            }
          ]
        }
      ],
      "query": "\n;with XMLNAMESPACES('http://www.datadictionary.nhs.uk/messages/COSD-v8-1' AS COSD),\n\tCosdRecords as ( \n\tselect\n\t\tT.staging.value('(Id/@root)[1]', 'uniqueidentifier') as Id,\n\t\tT.staging.query('*[local-name() != \"Id\"][1]/*[1]') as Node -- Select the first inner element of the element that is not called Id.\n\tfrom omop_staging.cosd_staging\n\tcross apply content.nodes('COSD:COSD/*') as T(staging)\n\twhere T.staging.exist('Id/@root') = 1\n\t\tand Content.value('namespace-uri((/*:COSD)[1])','nvarchar(max)') = 'http://www.datadictionary.nhs.uk/messages/COSD-v8-1'\n\t\t--and substring (FileName, 15, 2) = 'CO'\n)\nselect \n\tdistinct\n\t\tNode.value('(//NHSNumber/@extension)[1]', 'varchar(max)') as NhsNumber,\n\t\tNode.value('(//PersonDeathDate)[1]', 'varchar(max)') as DeathDate\nfrom CosdRecords\nwhere Node.value('(//PersonDeathDate)[1]', 'varchar(max)') is not null;\n\t",
      "lookup_table_markdown": null
    },
    {
      "name": "death_datetime",
      "operation_description": "Converts text to dates.",
      "dataSource": [
        {
          "name": "DeathDate",
          "description": "The date on which a PERSON died or is officially deemed to have died.",
          "origins": [
            {
              "origin": "PERSON DEATH DATE",
              "url": null
            }
          ]
        }
      ],
      "query": "\n;with XMLNAMESPACES('http://www.datadictionary.nhs.uk/messages/COSD-v8-1' AS COSD),\n\tCosdRecords as ( \n\tselect\n\t\tT.staging.value('(Id/@root)[1]', 'uniqueidentifier') as Id,\n\t\tT.staging.query('*[local-name() != \"Id\"][1]/*[1]') as Node -- Select the first inner element of the element that is not called Id.\n\tfrom omop_staging.cosd_staging\n\tcross apply content.nodes('COSD:COSD/*') as T(staging)\n\twhere T.staging.exist('Id/@root') = 1\n\t\tand Content.value('namespace-uri((/*:COSD)[1])','nvarchar(max)') = 'http://www.datadictionary.nhs.uk/messages/COSD-v8-1'\n\t\t--and substring (FileName, 15, 2) = 'CO'\n)\nselect \n\tdistinct\n\t\tNode.value('(//NHSNumber/@extension)[1]', 'varchar(max)') as NhsNumber,\n\t\tNode.value('(//PersonDeathDate)[1]', 'varchar(max)') as DeathDate\nfrom CosdRecords\nwhere Node.value('(//PersonDeathDate)[1]', 'varchar(max)') is not null;\n\t",
      "lookup_table_markdown": null
    },
    {
      "name": "death_type_concept_id",
      "operation_description": "Constant value set to `32818`. EHR Administration record",
      "dataSource": null,
      "query": null,
      "lookup_table_markdown": null
    },
    {
      "name": "cause_source_concept_id",
      "operation_description": "Constant value set to `32510`. EHR record patient status Deceased",
      "dataSource": null,
      "query": null,
      "lookup_table_markdown": null
    }
  ]
}